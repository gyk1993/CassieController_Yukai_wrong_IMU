/*
 * Automatically Generated from Mathematica.
 * Mon 26 Jun 2017 11:29:54 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t259;
  double t135;
  double t246;
  double t252;
  double t256;
  double t261;
  double t263;
  double t277;
  double t279;
  double t295;
  double t315;
  double t325;
  double t367;
  double t368;
  double t371;
  double t355;
  double t358;
  double t363;
  double t379;
  double t438;
  double t441;
  double t447;
  double t452;
  double t470;
  double t475;
  double t480;
  double t432;
  double t434;
  double t435;
  double t387;
  double t390;
  double t392;
  double t412;
  double t425;
  double t426;
  double t429;
  double t528;
  double t529;
  double t533;
  double t537;
  double t541;
  double t543;
  double t549;
  double t555;
  double t558;
  double t564;
  double t580;
  double t581;
  double t584;
  double t586;
  double t587;
  double t592;
  double t594;
  double t605;
  double t606;
  double t608;
  double t622;
  double t625;
  double t627;
  double t632;
  double t637;
  double t640;
  double t644;
  double t649;
  double t650;
  double t652;
  double t661;
  double t663;
  double t668;
  double t173;
  double t196;
  double t220;
  double t239;
  double t318;
  double t319;
  double t334;
  double t344;
  double t345;
  double t352;
  double t688;
  double t689;
  double t695;
  double t382;
  double t385;
  double t398;
  double t419;
  double t422;
  double t711;
  double t712;
  double t713;
  double t703;
  double t705;
  double t709;
  double t451;
  double t457;
  double t461;
  double t482;
  double t487;
  double t493;
  double t737;
  double t740;
  double t742;
  double t725;
  double t731;
  double t733;
  double t522;
  double t525;
  double t527;
  double t548;
  double t551;
  double t554;
  double t717;
  double t719;
  double t720;
  double t750;
  double t756;
  double t760;
  double t567;
  double t571;
  double t577;
  double t593;
  double t597;
  double t604;
  double t766;
  double t768;
  double t772;
  double t774;
  double t775;
  double t776;
  double t613;
  double t619;
  double t621;
  double t643;
  double t645;
  double t648;
  double t782;
  double t783;
  double t785;
  double t790;
  double t791;
  double t793;
  double t658;
  double t659;
  double t660;
  double t797;
  double t798;
  double t799;
  double t803;
  double t804;
  double t806;
  double t833;
  double t834;
  double t835;
  double t829;
  double t830;
  double t831;
  double t848;
  double t850;
  double t854;
  double t840;
  double t843;
  double t844;
  double t863;
  double t865;
  double t866;
  double t870;
  double t873;
  double t874;
  double t877;
  double t879;
  double t882;
  double t885;
  double t887;
  double t888;
  double t891;
  double t893;
  double t895;
  double t899;
  double t904;
  double t905;
  double t907;
  double t908;
  double t911;
  double t942;
  double t945;
  double t946;
  double t937;
  double t939;
  double t940;
  double t957;
  double t960;
  double t961;
  double t949;
  double t950;
  double t953;
  double t970;
  double t973;
  double t974;
  double t980;
  double t982;
  double t984;
  double t988;
  double t989;
  double t990;
  double t992;
  double t993;
  double t994;
  double t996;
  double t997;
  double t998;
  double t1000;
  double t1002;
  double t1007;
  double t1011;
  double t1014;
  double t1017;
  double t1046;
  double t1048;
  double t1049;
  double t1042;
  double t1043;
  double t1044;
  double t1061;
  double t1065;
  double t1066;
  double t1052;
  double t1053;
  double t1055;
  double t1079;
  double t1080;
  double t1081;
  double t1084;
  double t1086;
  double t1087;
  double t1092;
  double t1093;
  double t1095;
  double t1098;
  double t1099;
  double t1100;
  double t1103;
  double t1104;
  double t1105;
  double t1111;
  double t1112;
  double t1113;
  double t1117;
  double t1121;
  double t1123;
  double t1160;
  double t1161;
  double t1164;
  double t1146;
  double t1150;
  double t1151;
  double t1174;
  double t1176;
  double t1177;
  double t1182;
  double t1184;
  double t1185;
  double t1189;
  double t1190;
  double t1191;
  double t1194;
  double t1195;
  double t1196;
  double t1198;
  double t1200;
  double t1202;
  double t1204;
  double t1208;
  double t1209;
  double t1214;
  double t1217;
  double t1219;
  double t1239;
  double t1240;
  double t1241;
  double t1253;
  double t1255;
  double t1259;
  double t1245;
  double t1246;
  double t1247;
  double t1268;
  double t1271;
  double t1272;
  double t1276;
  double t1277;
  double t1278;
  double t1282;
  double t1283;
  double t1284;
  double t1289;
  double t1291;
  double t1294;
  double t1298;
  double t1299;
  double t1301;
  double t1305;
  double t1306;
  double t1307;
  double t1311;
  double t1315;
  double t1318;
  double t1353;
  double t1355;
  double t1356;
  double t1346;
  double t1347;
  double t1348;
  double t1337;
  double t1342;
  double t1343;
  double t1367;
  double t1368;
  double t1369;
  double t1373;
  double t1374;
  double t1376;
  double t1379;
  double t1383;
  double t1385;
  double t1389;
  double t1390;
  double t1391;
  double t1393;
  double t1394;
  double t1395;
  double t1397;
  double t1398;
  double t1399;
  double t1403;
  double t1406;
  double t1408;
  double t1431;
  double t1432;
  double t1433;
  double t1436;
  double t1437;
  double t1438;
  double t1441;
  double t1446;
  double t1447;
  double t1451;
  double t1452;
  double t1454;
  double t1460;
  double t1461;
  double t1462;
  double t1465;
  double t1468;
  double t1469;
  double t1473;
  double t1474;
  double t1476;
  double t1480;
  double t1481;
  double t1483;
  double t1486;
  double t1487;
  double t1489;
  double t1492;
  double t1494;
  double t1497;
  double t1520;
  double t1521;
  double t1522;
  double t1525;
  double t1526;
  double t1530;
  double t1532;
  double t1533;
  double t1539;
  double t1541;
  double t1545;
  double t1548;
  double t1550;
  double t1553;
  double t1557;
  double t1558;
  double t1564;
  double t1567;
  double t1570;
  double t1571;
  double t1575;
  double t1577;
  double t1579;
  double t1581;
  double t1583;
  double t1584;
  double t1601;
  double t1602;
  double t1606;
  double t1608;
  double t1611;
  double t1613;
  double t1615;
  double t1616;
  double t1619;
  double t1621;
  double t1623;
  double t1628;
  double t1629;
  double t1630;
  double t1632;
  double t1633;
  double t1634;
  double t1636;
  double t1638;
  double t1640;
  double t1642;
  double t1644;
  double t1648;
  double t1650;
  double t1651;
  double t1654;
  double t1658;
  double t1659;
  double t1662;
  double t1679;
  double t1680;
  double t1681;
  double t1683;
  double t1684;
  double t1686;
  double t1687;
  double t1691;
  double t1692;
  double t1693;
  double t1697;
  double t1698;
  double t1699;
  double t1703;
  double t1704;
  double t1706;
  double t1709;
  double t1710;
  double t1712;
  double t1714;
  double t1715;
  double t1716;
  double t1719;
  double t1720;
  double t1722;
  double t1740;
  double t1741;
  double t1746;
  double t1748;
  double t1749;
  double t1752;
  double t1753;
  double t1754;
  double t1757;
  double t1758;
  double t1759;
  double t1762;
  double t1765;
  double t1766;
  double t1768;
  double t1769;
  double t1770;
  double t1772;
  double t1773;
  double t1774;
  double t1792;
  double t1794;
  double t1795;
  double t1797;
  double t1798;
  double t1801;
  double t1802;
  double t1809;
  double t1810;
  double t1811;
  double t1813;
  double t1814;
  double t1815;
  double t1817;
  double t1818;
  double t1819;
  double t1821;
  double t1822;
  double t1824;
  double t1826;
  double t1827;
  double t1830;
  double t1833;
  double t1835;
  double t1836;
  double t1854;
  double t1855;
  double t1856;
  double t1861;
  double t1863;
  double t1864;
  double t1875;
  double t1876;
  double t1879;
  double t1881;
  double t1882;
  double t1883;
  double t1885;
  double t1886;
  double t1887;
  double t1889;
  double t1890;
  double t1892;
  double t1851;
  double t1852;
  double t1857;
  double t1858;
  double t1859;
  double t1911;
  double t1912;
  double t1915;
  double t1920;
  double t1921;
  double t1922;
  double t1924;
  double t1925;
  double t1926;
  double t1928;
  double t1929;
  double t1930;
  double t1932;
  double t1934;
  double t1936;
  double t1956;
  double t1957;
  double t1958;
  double t1952;
  double t1953;
  double t1954;
  double t1961;
  double t1962;
  double t1963;
  double t1974;
  double t1975;
  double t1976;
  double t1978;
  double t1979;
  double t1980;
  double t1982;
  double t1984;
  double t1986;
  double t1990;
  double t1991;
  double t1992;
  double t1869;
  double t1871;
  double t1872;
  double t2015;
  double t2016;
  double t2017;
  double t2021;
  double t2023;
  double t2024;
  double t2027;
  double t2028;
  double t2030;
  double t2032;
  double t2033;
  double t2034;
  double t2036;
  double t2038;
  double t2039;
  double t2042;
  double t2043;
  double t2044;
  double t2007;
  double t2008;
  double t2010;
  double t2011;
  double t2012;
  double t2062;
  double t2064;
  double t2065;
  double t2068;
  double t2069;
  double t2071;
  double t2072;
  double t2073;
  double t2075;
  double t2077;
  double t2078;
  double t2080;
  double t2081;
  double t2082;
  double t1970;
  double t1971;
  double t1972;
  double t2096;
  double t2097;
  double t2098;
  double t2100;
  double t2101;
  double t2102;
  double t2104;
  double t2105;
  double t2106;
  double t2108;
  double t2109;
  double t2110;
  double t2112;
  double t2113;
  double t2114;
  double t2116;
  double t2117;
  double t2118;
  double t2132;
  double t2133;
  double t2134;
  double t2139;
  double t2140;
  double t2142;
  double t2143;
  double t2145;
  double t2146;
  double t2147;
  double t2149;
  double t2150;
  double t2151;
  double t2129;
  double t2130;
  double t2131;
  double t2136;
  double t2137;
  double t2165;
  double t2166;
  double t2168;
  double t2169;
  double t2170;
  double t2172;
  double t2173;
  double t2184;
  double t2185;
  double t2186;
  double t2189;
  double t2190;
  double t2192;
  double t2193;
  double t2195;
  double t2196;
  double t2197;
  double t2199;
  double t2200;
  double t2201;
  double t2218;
  double t2219;
  double t2220;
  double t2222;
  double t2223;
  double t2225;
  double t2226;
  double t2212;
  double t2213;
  double t2215;
  double t2216;
  double t2217;
  double t2239;
  double t2240;
  double t811;
  double t2252;
  double t2253;
  double t2254;
  double t2256;
  double t2257;
  double t2259;
  double t2260;
  double t2274;
  double t2275;
  double t2276;
  double t2229;
  double t2233;
  double t2271;
  double t2272;
  double t2273;
  double t2278;
  double t2279;
  double t810;
  double t814;
  double t2247;
  double t2295;
  double t2296;
  double t2297;
  double t2263;
  double t2267;
  t259 = Cos(var1[3]);
  t135 = Cos(var1[6]);
  t246 = Cos(var1[5]);
  t252 = Sin(var1[3]);
  t256 = -1.*t246*t252;
  t261 = Sin(var1[4]);
  t263 = Sin(var1[5]);
  t277 = -1.*t259*t261*t263;
  t279 = t256 + t277;
  t295 = Cos(var1[4]);
  t315 = Sin(var1[6]);
  t325 = Cos(var1[7]);
  t367 = -1.*t259*t295*t135;
  t368 = -1.*t279*t315;
  t371 = t367 + t368;
  t355 = t135*t279;
  t358 = -1.*t259*t295*t315;
  t363 = t355 + t358;
  t379 = Sin(var1[7]);
  t438 = Cos(var1[8]);
  t441 = -1.*t438;
  t447 = 1. + t441;
  t452 = Sin(var1[8]);
  t470 = t325*t363;
  t475 = t371*t379;
  t480 = t470 + t475;
  t432 = t259*t246*t261;
  t434 = -1.*t252*t263;
  t435 = t432 + t434;
  t387 = Cos(var1[9]);
  t390 = -1.*t387;
  t392 = 1. + t390;
  t412 = Sin(var1[9]);
  t425 = t325*t371;
  t426 = -1.*t363*t379;
  t429 = t425 + t426;
  t528 = t438*t435;
  t529 = -1.*t480*t452;
  t533 = t528 + t529;
  t537 = Cos(var1[10]);
  t541 = -1.*t537;
  t543 = 1. + t541;
  t549 = Sin(var1[10]);
  t555 = t412*t429;
  t558 = t387*t533;
  t564 = t555 + t558;
  t580 = t387*t429;
  t581 = -1.*t412*t533;
  t584 = t580 + t581;
  t586 = Cos(var1[11]);
  t587 = -1.*t586;
  t592 = 1. + t587;
  t594 = Sin(var1[11]);
  t605 = -1.*t549*t564;
  t606 = t537*t584;
  t608 = t605 + t606;
  t622 = t537*t564;
  t625 = t549*t584;
  t627 = t622 + t625;
  t632 = Cos(var1[12]);
  t637 = -1.*t632;
  t640 = 1. + t637;
  t644 = Sin(var1[12]);
  t649 = t594*t608;
  t650 = t586*t627;
  t652 = t649 + t650;
  t661 = t586*t608;
  t663 = -1.*t594*t627;
  t668 = t661 + t663;
  t173 = -1.*t135;
  t196 = 1. + t173;
  t220 = 0.135*t196;
  t239 = 0. + t220;
  t318 = -0.135*t315;
  t319 = 0. + t318;
  t334 = -1.*t325;
  t344 = 1. + t334;
  t345 = 0.135*t344;
  t352 = 0. + t345;
  t688 = t259*t246;
  t689 = -1.*t252*t261*t263;
  t695 = t688 + t689;
  t382 = -0.135*t379;
  t385 = 0. + t382;
  t398 = -0.09*t392;
  t419 = 0.049*t412;
  t422 = 0. + t398 + t419;
  t711 = -1.*t295*t135*t252;
  t712 = -1.*t695*t315;
  t713 = t711 + t712;
  t703 = t135*t695;
  t705 = -1.*t295*t252*t315;
  t709 = t703 + t705;
  t451 = -0.049*t447;
  t457 = -0.135*t452;
  t461 = 0. + t451 + t457;
  t482 = 0.135*t447;
  t487 = -0.049*t452;
  t493 = 0. + t482 + t487;
  t737 = t325*t709;
  t740 = t713*t379;
  t742 = t737 + t740;
  t725 = t246*t252*t261;
  t731 = t259*t263;
  t733 = t725 + t731;
  t522 = -0.049*t392;
  t525 = -0.09*t412;
  t527 = 0. + t522 + t525;
  t548 = -0.049*t543;
  t551 = -0.21*t549;
  t554 = 0. + t548 + t551;
  t717 = t325*t713;
  t719 = -1.*t709*t379;
  t720 = t717 + t719;
  t750 = t438*t733;
  t756 = -1.*t742*t452;
  t760 = t750 + t756;
  t567 = -0.21*t543;
  t571 = 0.049*t549;
  t577 = 0. + t567 + t571;
  t593 = -0.2707*t592;
  t597 = 0.0016*t594;
  t604 = 0. + t593 + t597;
  t766 = t412*t720;
  t768 = t387*t760;
  t772 = t766 + t768;
  t774 = t387*t720;
  t775 = -1.*t412*t760;
  t776 = t774 + t775;
  t613 = -0.0016*t592;
  t619 = -0.2707*t594;
  t621 = 0. + t613 + t619;
  t643 = 0.0184*t640;
  t645 = -0.7055*t644;
  t648 = 0. + t643 + t645;
  t782 = -1.*t549*t772;
  t783 = t537*t776;
  t785 = t782 + t783;
  t790 = t537*t772;
  t791 = t549*t776;
  t793 = t790 + t791;
  t658 = -0.7055*t640;
  t659 = -0.0184*t644;
  t660 = 0. + t658 + t659;
  t797 = t594*t785;
  t798 = t586*t793;
  t799 = t797 + t798;
  t803 = t586*t785;
  t804 = -1.*t594*t793;
  t806 = t803 + t804;
  t833 = t295*t135;
  t834 = -1.*t261*t263*t315;
  t835 = t833 + t834;
  t829 = t135*t261*t263;
  t830 = t295*t315;
  t831 = t829 + t830;
  t848 = t325*t831;
  t850 = t835*t379;
  t854 = t848 + t850;
  t840 = t325*t835;
  t843 = -1.*t831*t379;
  t844 = t840 + t843;
  t863 = -1.*t246*t438*t261;
  t865 = -1.*t854*t452;
  t866 = t863 + t865;
  t870 = t412*t844;
  t873 = t387*t866;
  t874 = t870 + t873;
  t877 = t387*t844;
  t879 = -1.*t412*t866;
  t882 = t877 + t879;
  t885 = -1.*t549*t874;
  t887 = t537*t882;
  t888 = t885 + t887;
  t891 = t537*t874;
  t893 = t549*t882;
  t895 = t891 + t893;
  t899 = t594*t888;
  t904 = t586*t895;
  t905 = t899 + t904;
  t907 = t586*t888;
  t908 = -1.*t594*t895;
  t911 = t907 + t908;
  t942 = t135*t252*t261;
  t945 = t295*t252*t263*t315;
  t946 = t942 + t945;
  t937 = -1.*t295*t135*t252*t263;
  t939 = t252*t261*t315;
  t940 = t937 + t939;
  t957 = t325*t940;
  t960 = t946*t379;
  t961 = t957 + t960;
  t949 = t325*t946;
  t950 = -1.*t940*t379;
  t953 = t949 + t950;
  t970 = t295*t246*t438*t252;
  t973 = -1.*t961*t452;
  t974 = t970 + t973;
  t980 = t412*t953;
  t982 = t387*t974;
  t984 = t980 + t982;
  t988 = t387*t953;
  t989 = -1.*t412*t974;
  t990 = t988 + t989;
  t992 = -1.*t549*t984;
  t993 = t537*t990;
  t994 = t992 + t993;
  t996 = t537*t984;
  t997 = t549*t990;
  t998 = t996 + t997;
  t1000 = t594*t994;
  t1002 = t586*t998;
  t1007 = t1000 + t1002;
  t1011 = t586*t994;
  t1014 = -1.*t594*t998;
  t1017 = t1011 + t1014;
  t1046 = -1.*t259*t135*t261;
  t1048 = -1.*t259*t295*t263*t315;
  t1049 = t1046 + t1048;
  t1042 = t259*t295*t135*t263;
  t1043 = -1.*t259*t261*t315;
  t1044 = t1042 + t1043;
  t1061 = t325*t1044;
  t1065 = t1049*t379;
  t1066 = t1061 + t1065;
  t1052 = t325*t1049;
  t1053 = -1.*t1044*t379;
  t1055 = t1052 + t1053;
  t1079 = -1.*t259*t295*t246*t438;
  t1080 = -1.*t1066*t452;
  t1081 = t1079 + t1080;
  t1084 = t412*t1055;
  t1086 = t387*t1081;
  t1087 = t1084 + t1086;
  t1092 = t387*t1055;
  t1093 = -1.*t412*t1081;
  t1095 = t1092 + t1093;
  t1098 = -1.*t549*t1087;
  t1099 = t537*t1095;
  t1100 = t1098 + t1099;
  t1103 = t537*t1087;
  t1104 = t549*t1095;
  t1105 = t1103 + t1104;
  t1111 = t594*t1100;
  t1112 = t586*t1105;
  t1113 = t1111 + t1112;
  t1117 = t586*t1100;
  t1121 = -1.*t594*t1105;
  t1123 = t1117 + t1121;
  t1160 = -1.*t295*t246*t135*t325;
  t1161 = t295*t246*t315*t379;
  t1164 = t1160 + t1161;
  t1146 = t295*t246*t325*t315;
  t1150 = t295*t246*t135*t379;
  t1151 = t1146 + t1150;
  t1174 = -1.*t295*t438*t263;
  t1176 = -1.*t1164*t452;
  t1177 = t1174 + t1176;
  t1182 = t412*t1151;
  t1184 = t387*t1177;
  t1185 = t1182 + t1184;
  t1189 = t387*t1151;
  t1190 = -1.*t412*t1177;
  t1191 = t1189 + t1190;
  t1194 = -1.*t549*t1185;
  t1195 = t537*t1191;
  t1196 = t1194 + t1195;
  t1198 = t537*t1185;
  t1200 = t549*t1191;
  t1202 = t1198 + t1200;
  t1204 = t594*t1196;
  t1208 = t586*t1202;
  t1209 = t1204 + t1208;
  t1214 = t586*t1196;
  t1217 = -1.*t594*t1202;
  t1219 = t1214 + t1217;
  t1239 = -1.*t246*t252*t261;
  t1240 = -1.*t259*t263;
  t1241 = t1239 + t1240;
  t1253 = t135*t325*t1241;
  t1255 = -1.*t1241*t315*t379;
  t1259 = t1253 + t1255;
  t1245 = -1.*t325*t1241*t315;
  t1246 = -1.*t135*t1241*t379;
  t1247 = t1245 + t1246;
  t1268 = t438*t695;
  t1271 = -1.*t1259*t452;
  t1272 = t1268 + t1271;
  t1276 = t412*t1247;
  t1277 = t387*t1272;
  t1278 = t1276 + t1277;
  t1282 = t387*t1247;
  t1283 = -1.*t412*t1272;
  t1284 = t1282 + t1283;
  t1289 = -1.*t549*t1278;
  t1291 = t537*t1284;
  t1294 = t1289 + t1291;
  t1298 = t537*t1278;
  t1299 = t549*t1284;
  t1301 = t1298 + t1299;
  t1305 = t594*t1294;
  t1306 = t586*t1301;
  t1307 = t1305 + t1306;
  t1311 = t586*t1294;
  t1315 = -1.*t594*t1301;
  t1318 = t1311 + t1315;
  t1353 = t135*t325*t435;
  t1355 = -1.*t435*t315*t379;
  t1356 = t1353 + t1355;
  t1346 = t246*t252;
  t1347 = t259*t261*t263;
  t1348 = t1346 + t1347;
  t1337 = -1.*t325*t435*t315;
  t1342 = -1.*t135*t435*t379;
  t1343 = t1337 + t1342;
  t1367 = t438*t1348;
  t1368 = -1.*t1356*t452;
  t1369 = t1367 + t1368;
  t1373 = t412*t1343;
  t1374 = t387*t1369;
  t1376 = t1373 + t1374;
  t1379 = t387*t1343;
  t1383 = -1.*t412*t1369;
  t1385 = t1379 + t1383;
  t1389 = -1.*t549*t1376;
  t1390 = t537*t1385;
  t1391 = t1389 + t1390;
  t1393 = t537*t1376;
  t1394 = t549*t1385;
  t1395 = t1393 + t1394;
  t1397 = t594*t1391;
  t1398 = t586*t1395;
  t1399 = t1397 + t1398;
  t1403 = t586*t1391;
  t1406 = -1.*t594*t1395;
  t1408 = t1403 + t1406;
  t1431 = t135*t261;
  t1432 = t295*t263*t315;
  t1433 = t1431 + t1432;
  t1436 = t295*t135*t263;
  t1437 = -1.*t261*t315;
  t1438 = t1436 + t1437;
  t1441 = t325*t1433;
  t1446 = t1438*t379;
  t1447 = t1441 + t1446;
  t1451 = t325*t1438;
  t1452 = -1.*t1433*t379;
  t1454 = t1451 + t1452;
  t1460 = t412*t1454;
  t1461 = -1.*t387*t1447*t452;
  t1462 = t1460 + t1461;
  t1465 = t387*t1454;
  t1468 = t412*t1447*t452;
  t1469 = t1465 + t1468;
  t1473 = -1.*t549*t1462;
  t1474 = t537*t1469;
  t1476 = t1473 + t1474;
  t1480 = t537*t1462;
  t1481 = t549*t1469;
  t1483 = t1480 + t1481;
  t1486 = t594*t1476;
  t1487 = t586*t1483;
  t1489 = t1486 + t1487;
  t1492 = t586*t1476;
  t1494 = -1.*t594*t1483;
  t1497 = t1492 + t1494;
  t1520 = -1.*t135*t695;
  t1521 = t295*t252*t315;
  t1522 = t1520 + t1521;
  t1525 = t1522*t379;
  t1526 = t717 + t1525;
  t1530 = t325*t1522;
  t1532 = -1.*t713*t379;
  t1533 = t1530 + t1532;
  t1539 = t412*t1533;
  t1541 = -1.*t387*t1526*t452;
  t1545 = t1539 + t1541;
  t1548 = t387*t1533;
  t1550 = t412*t1526*t452;
  t1553 = t1548 + t1550;
  t1557 = -1.*t549*t1545;
  t1558 = t537*t1553;
  t1564 = t1557 + t1558;
  t1567 = t537*t1545;
  t1570 = t549*t1553;
  t1571 = t1567 + t1570;
  t1575 = t594*t1564;
  t1577 = t586*t1571;
  t1579 = t1575 + t1577;
  t1581 = t586*t1564;
  t1583 = -1.*t594*t1571;
  t1584 = t1581 + t1583;
  t1601 = t259*t295*t135;
  t1602 = -1.*t1348*t315;
  t1606 = t1601 + t1602;
  t1608 = -1.*t135*t1348;
  t1611 = t1608 + t358;
  t1613 = t325*t1606;
  t1615 = t1611*t379;
  t1616 = t1613 + t1615;
  t1619 = t325*t1611;
  t1621 = -1.*t1606*t379;
  t1623 = t1619 + t1621;
  t1628 = t412*t1623;
  t1629 = -1.*t387*t1616*t452;
  t1630 = t1628 + t1629;
  t1632 = t387*t1623;
  t1633 = t412*t1616*t452;
  t1634 = t1632 + t1633;
  t1636 = -1.*t549*t1630;
  t1638 = t537*t1634;
  t1640 = t1636 + t1638;
  t1642 = t537*t1630;
  t1644 = t549*t1634;
  t1648 = t1642 + t1644;
  t1650 = t594*t1640;
  t1651 = t586*t1648;
  t1654 = t1650 + t1651;
  t1658 = t586*t1640;
  t1659 = -1.*t594*t1648;
  t1662 = t1658 + t1659;
  t1679 = -1.*t295*t135*t263;
  t1680 = t261*t315;
  t1681 = t1679 + t1680;
  t1683 = -1.*t1681*t379;
  t1684 = t1441 + t1683;
  t1686 = -1.*t325*t1681;
  t1687 = t1686 + t1452;
  t1691 = t412*t1687;
  t1692 = -1.*t387*t1684*t452;
  t1693 = t1691 + t1692;
  t1697 = t387*t1687;
  t1698 = t412*t1684*t452;
  t1699 = t1697 + t1698;
  t1703 = -1.*t549*t1693;
  t1704 = t537*t1699;
  t1706 = t1703 + t1704;
  t1709 = t537*t1693;
  t1710 = t549*t1699;
  t1712 = t1709 + t1710;
  t1714 = t594*t1706;
  t1715 = t586*t1712;
  t1716 = t1714 + t1715;
  t1719 = t586*t1706;
  t1720 = -1.*t594*t1712;
  t1722 = t1719 + t1720;
  t1740 = -1.*t325*t709;
  t1741 = t1740 + t1532;
  t1746 = t412*t1741;
  t1748 = -1.*t387*t720*t452;
  t1749 = t1746 + t1748;
  t1752 = t387*t1741;
  t1753 = t412*t720*t452;
  t1754 = t1752 + t1753;
  t1757 = -1.*t549*t1749;
  t1758 = t537*t1754;
  t1759 = t1757 + t1758;
  t1762 = t537*t1749;
  t1765 = t549*t1754;
  t1766 = t1762 + t1765;
  t1768 = t594*t1759;
  t1769 = t586*t1766;
  t1770 = t1768 + t1769;
  t1772 = t586*t1759;
  t1773 = -1.*t594*t1766;
  t1774 = t1772 + t1773;
  t1792 = t135*t1348;
  t1794 = t259*t295*t315;
  t1795 = t1792 + t1794;
  t1797 = -1.*t1795*t379;
  t1798 = t1613 + t1797;
  t1801 = -1.*t325*t1795;
  t1802 = t1801 + t1621;
  t1809 = t412*t1802;
  t1810 = -1.*t387*t1798*t452;
  t1811 = t1809 + t1810;
  t1813 = t387*t1802;
  t1814 = t412*t1798*t452;
  t1815 = t1813 + t1814;
  t1817 = -1.*t549*t1811;
  t1818 = t537*t1815;
  t1819 = t1817 + t1818;
  t1821 = t537*t1811;
  t1822 = t549*t1815;
  t1824 = t1821 + t1822;
  t1826 = t594*t1819;
  t1827 = t586*t1824;
  t1830 = t1826 + t1827;
  t1833 = t586*t1819;
  t1835 = -1.*t594*t1824;
  t1836 = t1833 + t1835;
  t1854 = t325*t1681;
  t1855 = t1433*t379;
  t1856 = t1854 + t1855;
  t1861 = -1.*t438*t1856;
  t1863 = -1.*t295*t246*t452;
  t1864 = t1861 + t1863;
  t1875 = -1.*t537*t412*t1864;
  t1876 = -1.*t387*t549*t1864;
  t1879 = t1875 + t1876;
  t1881 = t387*t537*t1864;
  t1882 = -1.*t412*t549*t1864;
  t1883 = t1881 + t1882;
  t1885 = t594*t1879;
  t1886 = t586*t1883;
  t1887 = t1885 + t1886;
  t1889 = t586*t1879;
  t1890 = -1.*t594*t1883;
  t1892 = t1889 + t1890;
  t1851 = -0.135*t438;
  t1852 = t1851 + t487;
  t1857 = -0.049*t438;
  t1858 = 0.135*t452;
  t1859 = t1857 + t1858;
  t1911 = -1.*t438*t742;
  t1912 = -1.*t733*t452;
  t1915 = t1911 + t1912;
  t1920 = -1.*t537*t412*t1915;
  t1921 = -1.*t387*t549*t1915;
  t1922 = t1920 + t1921;
  t1924 = t387*t537*t1915;
  t1925 = -1.*t412*t549*t1915;
  t1926 = t1924 + t1925;
  t1928 = t594*t1922;
  t1929 = t586*t1926;
  t1930 = t1928 + t1929;
  t1932 = t586*t1922;
  t1934 = -1.*t594*t1926;
  t1936 = t1932 + t1934;
  t1956 = t325*t1795;
  t1957 = t1606*t379;
  t1958 = t1956 + t1957;
  t1952 = -1.*t259*t246*t261;
  t1953 = t252*t263;
  t1954 = t1952 + t1953;
  t1961 = -1.*t438*t1958;
  t1962 = -1.*t1954*t452;
  t1963 = t1961 + t1962;
  t1974 = -1.*t537*t412*t1963;
  t1975 = -1.*t387*t549*t1963;
  t1976 = t1974 + t1975;
  t1978 = t387*t537*t1963;
  t1979 = -1.*t412*t549*t1963;
  t1980 = t1978 + t1979;
  t1982 = t594*t1976;
  t1984 = t586*t1980;
  t1986 = t1982 + t1984;
  t1990 = t586*t1976;
  t1991 = -1.*t594*t1980;
  t1992 = t1990 + t1991;
  t1869 = t295*t246*t438;
  t1871 = -1.*t1856*t452;
  t1872 = t1869 + t1871;
  t2015 = -1.*t412*t1684;
  t2016 = -1.*t387*t1872;
  t2017 = t2015 + t2016;
  t2021 = t387*t1684;
  t2023 = -1.*t412*t1872;
  t2024 = t2021 + t2023;
  t2027 = t549*t2017;
  t2028 = t537*t2024;
  t2030 = t2027 + t2028;
  t2032 = t537*t2017;
  t2033 = -1.*t549*t2024;
  t2034 = t2032 + t2033;
  t2036 = -1.*t594*t2030;
  t2038 = t586*t2034;
  t2039 = t2036 + t2038;
  t2042 = t586*t2030;
  t2043 = t594*t2034;
  t2044 = t2042 + t2043;
  t2007 = 0.049*t387;
  t2008 = t2007 + t525;
  t2010 = -0.09*t387;
  t2011 = -0.049*t412;
  t2012 = t2010 + t2011;
  t2062 = -1.*t412*t720;
  t2064 = -1.*t387*t760;
  t2065 = t2062 + t2064;
  t2068 = t549*t2065;
  t2069 = t2068 + t783;
  t2071 = t537*t2065;
  t2072 = -1.*t549*t776;
  t2073 = t2071 + t2072;
  t2075 = -1.*t594*t2069;
  t2077 = t586*t2073;
  t2078 = t2075 + t2077;
  t2080 = t586*t2069;
  t2081 = t594*t2073;
  t2082 = t2080 + t2081;
  t1970 = t438*t1954;
  t1971 = -1.*t1958*t452;
  t1972 = t1970 + t1971;
  t2096 = -1.*t412*t1798;
  t2097 = -1.*t387*t1972;
  t2098 = t2096 + t2097;
  t2100 = t387*t1798;
  t2101 = -1.*t412*t1972;
  t2102 = t2100 + t2101;
  t2104 = t549*t2098;
  t2105 = t537*t2102;
  t2106 = t2104 + t2105;
  t2108 = t537*t2098;
  t2109 = -1.*t549*t2102;
  t2110 = t2108 + t2109;
  t2112 = -1.*t594*t2106;
  t2113 = t586*t2110;
  t2114 = t2112 + t2113;
  t2116 = t586*t2106;
  t2117 = t594*t2110;
  t2118 = t2116 + t2117;
  t2132 = t412*t1684;
  t2133 = t387*t1872;
  t2134 = t2132 + t2133;
  t2139 = -1.*t549*t2134;
  t2140 = t2139 + t2028;
  t2142 = -1.*t537*t2134;
  t2143 = t2142 + t2033;
  t2145 = -1.*t594*t2140;
  t2146 = t586*t2143;
  t2147 = t2145 + t2146;
  t2149 = t586*t2140;
  t2150 = t594*t2143;
  t2151 = t2149 + t2150;
  t2129 = -0.21*t537;
  t2130 = -0.049*t549;
  t2131 = t2129 + t2130;
  t2136 = 0.049*t537;
  t2137 = t2136 + t551;
  t2165 = -1.*t537*t772;
  t2166 = t2165 + t2072;
  t2168 = -1.*t594*t785;
  t2169 = t586*t2166;
  t2170 = t2168 + t2169;
  t2172 = t594*t2166;
  t2173 = t803 + t2172;
  t2184 = t412*t1798;
  t2185 = t387*t1972;
  t2186 = t2184 + t2185;
  t2189 = -1.*t549*t2186;
  t2190 = t2189 + t2105;
  t2192 = -1.*t537*t2186;
  t2193 = t2192 + t2109;
  t2195 = -1.*t594*t2190;
  t2196 = t586*t2193;
  t2197 = t2195 + t2196;
  t2199 = t586*t2190;
  t2200 = t594*t2193;
  t2201 = t2199 + t2200;
  t2218 = t537*t2134;
  t2219 = t549*t2024;
  t2220 = t2218 + t2219;
  t2222 = -1.*t586*t2220;
  t2223 = t2145 + t2222;
  t2225 = -1.*t594*t2220;
  t2226 = t2149 + t2225;
  t2212 = 0.0016*t586;
  t2213 = t2212 + t619;
  t2215 = -0.2707*t586;
  t2216 = -0.0016*t594;
  t2217 = t2215 + t2216;
  t2239 = -1.*t586*t793;
  t2240 = t2168 + t2239;
  t811 = t632*t806;
  t2252 = t537*t2186;
  t2253 = t549*t2102;
  t2254 = t2252 + t2253;
  t2256 = -1.*t586*t2254;
  t2257 = t2195 + t2256;
  t2259 = -1.*t594*t2254;
  t2260 = t2199 + t2259;
  t2274 = t594*t2140;
  t2275 = t586*t2220;
  t2276 = t2274 + t2275;
  t2229 = t632*t2226;
  t2233 = -1.*t644*t2226;
  t2271 = -0.7055*t632;
  t2272 = 0.0184*t644;
  t2273 = t2271 + t2272;
  t2278 = -0.0184*t632;
  t2279 = t2278 + t645;
  t810 = -1.*t644*t799;
  t814 = t810 + t811;
  t2247 = -1.*t644*t806;
  t2295 = t594*t2190;
  t2296 = t586*t2254;
  t2297 = t2295 + t2296;
  t2263 = t632*t2260;
  t2267 = -1.*t644*t2260;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=0;
  p_output1[10]=t239*t279 - 1.*t259*t295*t319 + t352*t363 + t371*t385 + t422*t429 + t435*t461 + 0.1305*(t435*t452 + t438*t480) + t480*t493 + t527*t533 + t554*t564 + t577*t584 + t604*t608 + t621*t627 + t648*t652 + t660*t668 - 1.1135*(-1.*t644*t652 + t632*t668) - 0.0216*(t632*t652 + t644*t668);
  p_output1[11]=-1.*t252*t295*t319 + t239*t695 + t352*t709 + t385*t713 + t422*t720 + t461*t733 + t493*t742 + 0.1305*(t452*t733 + t438*t742) + t527*t760 + t554*t772 + t577*t776 + t604*t785 + t621*t793 + t648*t799 + t660*t806 - 0.0216*(t632*t799 + t644*t806) - 1.1135*t814;
  p_output1[12]=t239*t261*t263 + t295*t319 - 1.*t246*t261*t461 + t352*t831 + t385*t835 + t422*t844 + t493*t854 + 0.1305*(-1.*t246*t261*t452 + t438*t854) + t527*t866 + t554*t874 + t577*t882 + t604*t888 + t621*t895 + t648*t905 + t660*t911 - 1.1135*(-1.*t644*t905 + t632*t911) - 0.0216*(t632*t905 + t644*t911);
  p_output1[13]=-1.*t239*t252*t263*t295 + t252*t261*t319 + t246*t252*t295*t461 - 1.1135*(t1017*t632 - 1.*t1007*t644) - 0.0216*(t1007*t632 + t1017*t644) + t1007*t648 + t1017*t660 + t352*t940 + t385*t946 + t422*t953 + t493*t961 + 0.1305*(t246*t252*t295*t452 + t438*t961) + t527*t974 + t554*t984 + t577*t990 + t604*t994 + t621*t998;
  p_output1[14]=t239*t259*t263*t295 - 1.*t259*t261*t319 + t1044*t352 + t1049*t385 + t1055*t422 + 0.1305*(t1066*t438 - 1.*t246*t259*t295*t452) - 1.*t246*t259*t295*t461 + t1066*t493 + t1081*t527 + t1087*t554 + t1095*t577 + t1100*t604 + t1105*t621 - 1.1135*(t1123*t632 - 1.*t1113*t644) - 0.0216*(t1113*t632 + t1123*t644) + t1113*t648 + t1123*t660;
  p_output1[15]=-1.*t239*t246*t295 - 1.*t135*t246*t295*t352 + t246*t295*t315*t385 + t1151*t422 + 0.1305*(t1164*t438 - 1.*t263*t295*t452) - 1.*t263*t295*t461 + t1164*t493 + t1177*t527 + t1185*t554 + t1191*t577 + t1196*t604 + t1202*t621 - 1.1135*(t1219*t632 - 1.*t1209*t644) - 0.0216*(t1209*t632 + t1219*t644) + t1209*t648 + t1219*t660;
  p_output1[16]=t1241*t239 + t1241*t135*t352 - 1.*t1241*t315*t385 + t1247*t422 + t1259*t493 + t1272*t527 + t1278*t554 + t1284*t577 + t1294*t604 + t1301*t621 - 1.1135*(t1318*t632 - 1.*t1307*t644) - 0.0216*(t1307*t632 + t1318*t644) + t1307*t648 + t1318*t660 + t461*t695 + 0.1305*(t1259*t438 + t452*t695);
  p_output1[17]=t1343*t422 + t239*t435 + t135*t352*t435 - 1.*t315*t385*t435 + 0.1305*(t1356*t438 + t1348*t452) + t1348*t461 + t1356*t493 + t1369*t527 + t1376*t554 + t1385*t577 + t1391*t604 + t1395*t621 - 1.1135*(t1408*t632 - 1.*t1399*t644) - 0.0216*(t1399*t632 + t1408*t644) + t1399*t648 + t1408*t660;
  p_output1[18]=-0.135*t135*t261 - 0.135*t263*t295*t315 + t1433*t352 + t1438*t385 + t1454*t422 + 0.1305*t1447*t438 + t1447*t493 - 1.*t1447*t452*t527 + t1462*t554 + t1469*t577 + t1476*t604 + t1483*t621 - 1.1135*(t1497*t632 - 1.*t1489*t644) - 0.0216*(t1489*t632 + t1497*t644) + t1489*t648 + t1497*t660;
  p_output1[19]=0.135*t135*t252*t295 + t1522*t385 + t1533*t422 + 0.1305*t1526*t438 + t1526*t493 - 1.*t1526*t452*t527 + t1545*t554 + t1553*t577 + t1564*t604 + t1571*t621 - 1.1135*(t1584*t632 - 1.*t1579*t644) - 0.0216*(t1579*t632 + t1584*t644) + t1579*t648 + t1584*t660 + 0.135*t315*t695 + t352*t713;
  p_output1[20]=-0.135*t135*t259*t295 + 0.135*t1348*t315 + t1606*t352 + t1611*t385 + t1623*t422 + 0.1305*t1616*t438 + t1616*t493 - 1.*t1616*t452*t527 + t1630*t554 + t1634*t577 + t1640*t604 + t1648*t621 - 1.1135*(t1662*t632 - 1.*t1654*t644) - 0.0216*(t1654*t632 + t1662*t644) + t1654*t648 + t1662*t660;
  p_output1[21]=-0.135*t1433*t325 + 0.135*t1681*t379 + t1687*t422 + 0.1305*t1684*t438 + t1684*t493 - 1.*t1684*t452*t527 + t1693*t554 + t1699*t577 + t1706*t604 + t1712*t621 - 1.1135*(t1722*t632 - 1.*t1716*t644) - 0.0216*(t1716*t632 + t1722*t644) + t1716*t648 + t1722*t660;
  p_output1[22]=t1741*t422 + t1749*t554 + t1754*t577 + t1759*t604 + t1766*t621 - 1.1135*(t1774*t632 - 1.*t1770*t644) - 0.0216*(t1770*t632 + t1774*t644) + t1770*t648 + t1774*t660 + 0.135*t379*t709 - 0.135*t325*t713 + 0.1305*t438*t720 + t493*t720 - 1.*t452*t527*t720;
  p_output1[23]=-0.135*t1606*t325 + 0.135*t1795*t379 + t1802*t422 + 0.1305*t1798*t438 + t1798*t493 - 1.*t1798*t452*t527 + t1811*t554 + t1815*t577 + t1819*t604 + t1824*t621 - 1.1135*(t1836*t632 - 1.*t1830*t644) - 0.0216*(t1830*t632 + t1836*t644) + t1830*t648 + t1836*t660;
  p_output1[24]=t1856*t1859 + 0.1305*t1872 + t1852*t246*t295 + t1864*t527 + t1864*t387*t554 - 1.*t1864*t412*t577 + t1879*t604 + t1883*t621 - 1.1135*(t1892*t632 - 1.*t1887*t644) - 0.0216*(t1887*t632 + t1892*t644) + t1887*t648 + t1892*t660;
  p_output1[25]=t1915*t527 + t1915*t387*t554 - 1.*t1915*t412*t577 + t1922*t604 + t1926*t621 - 1.1135*(t1936*t632 - 1.*t1930*t644) - 0.0216*(t1930*t632 + t1936*t644) + t1930*t648 + t1936*t660 + t1852*t733 + t1859*t742 + 0.1305*t760;
  p_output1[26]=t1852*t1954 + t1859*t1958 + 0.1305*t1972 + t1963*t527 + t1963*t387*t554 - 1.*t1963*t412*t577 + t1976*t604 + t1980*t621 - 1.1135*(t1992*t632 - 1.*t1986*t644) - 0.0216*(t1986*t632 + t1992*t644) + t1986*t648 + t1992*t660;
  p_output1[27]=t1684*t2008 + t1872*t2012 + t2024*t554 + t2017*t577 + t2034*t604 + t2030*t621 - 0.0216*(t2044*t632 + t2039*t644) - 1.1135*(t2039*t632 - 1.*t2044*t644) + t2044*t648 + t2039*t660;
  p_output1[28]=t2065*t577 + t2073*t604 + t2069*t621 - 0.0216*(t2082*t632 + t2078*t644) - 1.1135*(t2078*t632 - 1.*t2082*t644) + t2082*t648 + t2078*t660 + t2008*t720 + t2012*t760 + t554*t776;
  p_output1[29]=t1798*t2008 + t1972*t2012 + t2102*t554 + t2098*t577 + t2110*t604 + t2106*t621 - 0.0216*(t2118*t632 + t2114*t644) - 1.1135*(t2114*t632 - 1.*t2118*t644) + t2118*t648 + t2114*t660;
  p_output1[30]=t2131*t2134 + t2024*t2137 + t2143*t604 + t2140*t621 - 0.0216*(t2151*t632 + t2147*t644) - 1.1135*(t2147*t632 - 1.*t2151*t644) + t2151*t648 + t2147*t660;
  p_output1[31]=t2166*t604 - 0.0216*(t2173*t632 + t2170*t644) - 1.1135*(t2170*t632 - 1.*t2173*t644) + t2173*t648 + t2170*t660 + t2131*t772 + t2137*t776 + t621*t785;
  p_output1[32]=t2102*t2137 + t2131*t2186 + t2193*t604 + t2190*t621 - 0.0216*(t2201*t632 + t2197*t644) - 1.1135*(t2197*t632 - 1.*t2201*t644) + t2201*t648 + t2197*t660;
  p_output1[33]=t2140*t2213 + t2217*t2220 - 1.1135*(t2233 + t2223*t632) - 0.0216*(t2229 + t2223*t644) + t2226*t648 + t2223*t660;
  p_output1[34]=-1.1135*(t2247 + t2240*t632) + t2240*t660 + t2213*t785 + t2217*t793 + t648*t806 - 0.0216*(t2240*t644 + t811);
  p_output1[35]=t2190*t2213 + t2217*t2254 - 1.1135*(t2267 + t2257*t632) - 0.0216*(t2263 + t2257*t644) + t2260*t648 + t2257*t660;
  p_output1[36]=t2273*t2276 + t2226*t2279 - 1.1135*(t2233 - 1.*t2276*t632) - 0.0216*(t2229 - 1.*t2276*t644);
  p_output1[37]=t2273*t799 - 1.1135*(t2247 - 1.*t632*t799) + t2279*t806 - 0.0216*t814;
  p_output1[38]=t2260*t2279 + t2273*t2297 - 1.1135*(t2267 - 1.*t2297*t632) - 0.0216*(t2263 - 1.*t2297*t644);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_LeftToeJoint.hh"

namespace SymFunction
{

void J_LeftToeJoint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
